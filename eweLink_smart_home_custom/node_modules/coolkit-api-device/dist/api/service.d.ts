import { ISetDeviceSetting, UserInfo, ThingData, Scene, IUpdateParams } from '../ts/interface';
declare function getDeviceUser(): Promise<{
    error: number;
    msg: string;
    data?: {
        owner: UserInfo;
    };
}>;
declare function executeScene(id: string): Promise<{
    error: number;
    msg: string;
}>;
declare function getGateWayAndSubDevice(): Promise<{
    error: number;
    msg: string;
    data: {
        gatewayInfo: {
            itemType: number;
            itemData: ThingData;
            index: number;
        };
        subDevicesInfo: {
            itemType: number;
            itemData: ThingData;
            index: number;
        }[];
    };
}>;
declare function getCertainScenes(sceneIds: string[]): Promise<{
    error: number;
    msg: string;
    data: {
        scenes: Scene[];
    };
}>;
declare function setDeviceSetting(settings: ISetDeviceSetting): Promise<import(".").ApiResponse>;
declare function deleteSubDevice(id: string): Promise<import(".").ApiResponse>;
declare function getWebRTCChannel(from: string): Promise<{
    error: number;
    msg: string;
    data: {
        arn: string;
        region: string;
        expire: string;
        credential: {
            key: string;
            secret: string;
            token: string;
            expire: string;
        };
    };
}>;
declare function updateSubDevice(params: IUpdateParams): Promise<import(".").ApiResponse>;
declare function addSubDevice(params: {
    subDevices: {
        name?: string;
        info: any;
    }[];
    type: number;
    familyid?: string;
    roomid?: string;
    sort?: number;
}): Promise<import(".").ApiResponse>;
declare function prolongWebRTCChannel(arn: string): Promise<{
    error: number;
    msg: string;
    data: number;
}>;
export { getDeviceUser, executeScene, getGateWayAndSubDevice, getCertainScenes, setDeviceSetting, deleteSubDevice, getWebRTCChannel, updateSubDevice, addSubDevice, prolongWebRTCChannel, };
